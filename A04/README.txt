# David Park
# dappark
# 109582425

decaf_checker.py
    Takes a file as input from the command-line and calls decaf_lexer and decaf_parser as the lexer and parser to create AST
	defined by decaf_ast.
	AST is type-checked by class methods and decaf_typecheck
    Outputs AST if syntatically correct and type-checking succeeds

decaf_lexer.py
	Tokenizes the input according to the Decaf Language Reference Manual
	Set of tokens contain all the reserved keywords (excluding do) and basic arithmetic/logic symbols

	Outputs nothing unless illegal characters are detected
	Illegal characters are characters not matched by any preceding regex

decaf_parser.py
	Parses the tokens generated by decaf_lexer using rules defined by the Decaf grammar
	Outputs nothing unless a syntax error is encountered and exits
	Syntax errors occur when a token has no matching production

decaf_ast.py
	Outlines the tree strutcture for the AST
	Each class print method is recursively called after using the printAST() method in the base AST class

decaf_typecheck.py
	Contains helper functions to traverse tree and type-check Decaf programs